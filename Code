Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.


MITAL BHALANI


Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table =	10000
ii. Business table =	10000
iii. Category table =	10000
iv. Checkin table =	10000
v. elite_years table =	10000
vi. friend table =	10000 
vii. hours table =	10000
viii. photo table =	10000
ix. review table =	10000
x. tip table =		10000
xi. user table =	10000


Sample code (including NULL values):

SELECT count(*) as 
total_records
FROM attribute;

+---------------+
| total_records |
+---------------+
|         10000 |
+---------------+
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = id: 10000,business_id: 8090,user_id: 9581
vi. Checkin = 493
vii. Photo = id: 10000,business_id: 6493
viii. Tip = user_id: 537, business_id: 3979
ix. User = 10000
x. Friend = 11
xi. Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: NO
	
	
	SQL code used to arrive at answer:	
	SELECT count(*)
	FROM user
	where id IS NULL OR 
		  name IS NULL OR 
		  review_count IS NULL OR 
		  yelping_since IS NULL OR
		  useful IS NULL OR 
		  funny IS NULL OR 
		  cool IS NULL OR 
		  fans IS NULL OR 
		  average_stars IS NULL OR 
		  compliment_hot IS NULL OR 
		  compliment_more IS NULL OR 
		  compliment_profile IS NULL OR 
		  compliment_cute IS NULL OR 
		  compliment_list IS NULL OR 
		  compliment_note IS NULL OR 
		  compliment_plain IS NULL OR 
		  compliment_cool IS NULL OR 
		  compliment_funny IS NULL OR 
		  compliment_writer IS NULL OR 
		  compliment_photos IS NULL
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:


	i. Table: Review, Column: Stars
	
		min: 1    	max:5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1		max: 5		avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000	avg: 24.2995
		


Sample Code: SELECT min(Stars),max(Stars),avg(Stars) FROM Review
		
+------------+------------+------------+
| min(Stars) | max(Stars) | avg(Stars) |
+------------+------------+------------+
|          1 |          5 |     3.7082 |
+------------+------------+------------+
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:		SELECT city,sum(review_count)as review
											FROM business 
											group by city 
											ORDER BY review desc;
	
	
	Copy and Paste the Result Below:
										
									+-----------------+--------+
									| city            | review |
									+-----------------+--------+
									| Las Vegas       |  82854 |
									| Phoenix         |  34503 |
									| Toronto         |  24113 |
									| Scottsdale      |  20614 |
									| Charlotte       |  12523 |
									| Henderson       |  10871 |
									| Tempe           |  10504 |
									| Pittsburgh      |   9798 |
									| Montréal        |   9448 |
									| Chandler        |   8112 |
									| Mesa            |   6875 |
									| Gilbert         |   6380 |
									| Cleveland       |   5593 |
									| Madison         |   5265 |
									| Glendale        |   4406 |
									| Mississauga     |   3814 |
									| Edinburgh       |   2792 |
									| Peoria          |   2624 |
									| North Las Vegas |   2438 |
									| Markham         |   2352 |
									| Champaign       |   2029 |
									| Stuttgart       |   1849 |
									| Surprise        |   1520 |
									| Lakewood        |   1465 |
									| Goodyear        |   1155 |
									+-----------------+--------+
									(Output limit exceeded, 25 of 362 total rows shown)
										
										

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
									SELECT stars,SUM(review_count) as count
									FROM business 
									WHERE city = 'Avon' 
									GROUP BY stars;


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------+-------+
| stars | count |
+-------+-------+
|   1.5 |    10 |
|   2.5 |     6 |
|   3.5 |    88 |
|   4.0 |    21 |
|   4.5 |    31 |
|   5.0 |     3 |
+-------+-------+

ii. Beachwood

SQL code used to arrive at answer:
									SELECT
									name
									, stars
									, review_count
									FROM business
									where city = 'Beachwood';	


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+---------------------------------+-------+--------------+
| name                            | stars | review_count |
+---------------------------------+-------+--------------+
| Maltz Museum of Jewish Heritage |   3.0 |            8 |
| Charley's Grilled Subs          |   3.0 |            3 |
| Sixth & Pine                    |   4.5 |           14 |
| Beechmont Country Club          |   5.0 |            6 |
| Hyde Park Prime Steakhouse      |   4.0 |           69 |
| Origins                         |   4.5 |            3 |
| Fyodor Bridal Atelier           |   5.0 |            4 |
| College Planning Network        |   2.0 |            8 |
| Lucky Brand Jeans               |   3.5 |            3 |
| American Eagle Outfitters       |   3.5 |            3 |
| Shaker Women's Wellness         |   5.0 |            6 |
| Avis Rent A Car                 |   2.5 |            3 |
| Cleveland Acupuncture           |   5.0 |            3 |
| Studio Mz                       |   5.0 |            4 |
+---------------------------------+-------+--------------+


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
										SELECT id,name,review_count as review
										FROM user 
										ORDER BY review 
										desc limit 3;	
	
		
	Copy and Paste the Result Below:
										+------------------------+--------+--------+
										| id                     | name   | review |
										+------------------------+--------+--------+
										| -G7Zkl1wIWBBmD0KRy_sCw | Gerald |   2000 |
										| -3s52C4zL_DHRK0ULG6qtg | Sara   |   1629 |
										| -8lbUNlXVSoXqaRRiHiSNg | Yuri   |   1339 |
										+------------------------+--------+--------+
		


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	As table below depicts, posing more reviews does not necessarily correlate with more fans. For example, 
	Gerald has posed the most reviews, he has fewer fans in comparison with Mimi. 
	Therefore, sorting the users in descending order based on their total number of reviews does not sort the fans in the same order, 
	meaning that there is not a correlation between the total number of reviews and number of fans.
	
	Sample Code: 
				SELECT
				name
				, id
				, review_count
				, fans
				FROM user
				ORDER BY review_count desc;
	Output:
			+------------------------+-----------+--------------+------+
			| id                     | name      | review_count | fans |
			+------------------------+-----------+--------------+------+
			| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |         2000 |  253 |
			| -3s52C4zL_DHRK0ULG6qtg | Sara      |         1629 |   50 |
			| -8lbUNlXVSoXqaRRiHiSNg | Yuri      |         1339 |   76 |
			| -K2Tcgh2EKX6e6HqqIrBIQ | .Hon      |         1246 |  101 |
			| -FZBTkAZEXoP7CYvRV2ZwQ | William   |         1215 |  126 |
			| --2vR0DIsmQ6WfcSzKWigw | Harald    |         1153 |  311 |
			| -gokwePdbXjfS0iF7NsUGA | eric      |         1116 |   16 |
			| -DFCC64NXgqrxlO8aLU5rg | Roanna    |         1039 |  104 |
			| -8EnCioUmDygAbsYZmTeRQ | Mimi      |          968 |  497 |
			| -0IiMAZI2SsQ7VmyzJjokQ | Christine |          930 |  173 |
			| -fUARDNuXAfrOn4WLSZLgA | Ed        |          904 |   38 |
			| -hKniZN2OdshWLHYuj21jQ | Nicole    |          864 |   43 |
			| -9da1xk7zgnnfO1uTVYGkA | Fran      |          862 |  124 |
			| -B-QEUESGWHPE_889WJaeg | Mark      |          861 |  115 |
			| -kLVfaJytOJY2-QdQoCcNQ | Christina |          842 |   85 |
			| -kO6984fXByyZm3_6z2JYg | Dominic   |          836 |   37 |
			| -lh59ko3dxChBSZ9U7LfUw | Lissa     |          834 |  120 |
			| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |          813 |  159 |
			| -l9giG8TSDBG1jnUBUXp5w | Alison    |          775 |   61 |
			| -dw8f7FLaUmWR7bfJ_Yf0w | Sui       |          754 |   78 |
			| -AaBjWJYiQxXkCMDlXfPGw | Tim       |          702 |   35 |
			| -jt1ACMiZljnBFvS6RRvnA | L         |          696 |   10 |
			| -IgKkE8JvYNWeGu8ze4P8Q | Angela    |          694 |  101 |
			| -hxUwfo3cMnLTv-CAaP69A | Crissy    |          676 |   25 |
			| -H6cTbVxeIRYR-atxdielQ | Lyn       |          675 |   45 |
			+------------------------+-----------+--------------+------+
			(Output limit exceeded, 25 of 10000 total rows shown)

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: As Below Output show there are more reviews associated with word LOVE(1780)than compared to HATE(232)

	
	SQL code used to arrive at answer:
										SELECT count (*)
										FROM review
										where text like '%love%';
	Output(LOVE):
					+-----------+
					| count (*) |
					+-----------+
					|      1780 |
					+-----------+
	SQL code used to arrive at answer: 
										SELECT count (*)
										FROM review
										where text like '%hate%';
	Output(Hate):
					+-----------+
					| count (*) |
					+-----------+
					|       232 |
					+-----------+	
	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
										SELECT
										name
										, id
										, fans
										FROM user
										ORDER BY fans desc
										LIMIT 10;
	
	
	Copy and Paste the Result Below:
									+-----------+------------------------+------+
									| name      | id                     | fans |
									+-----------+------------------------+------+
									| Amy       | -9I98YbNQnLdAmcYfb324Q |  503 |
									| Mimi      | -8EnCioUmDygAbsYZmTeRQ |  497 |
									| Harald    | --2vR0DIsmQ6WfcSzKWigw |  311 |
									| Gerald    | -G7Zkl1wIWBBmD0KRy_sCw |  253 |
									| Christine | -0IiMAZI2SsQ7VmyzJjokQ |  173 |
									| Lisa      | -g3XIcCb2b-BD0QBCcq2Sw |  159 |
									| Cat       | -9bbDysuiWeo2VShFJJtcw |  133 |
									| William   | -FZBTkAZEXoP7CYvRV2ZwQ |  126 |
									| Fran      | -9da1xk7zgnnfO1uTVYGkA |  124 |
									| Lissa     | -lh59ko3dxChBSZ9U7LfUw |  120 |
									+-----------+------------------------+------+

	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
	
		City: Mesa		Category: Food
	
	
i. Do the two groups you chose to analyze have a different distribution of hours?
	Answer:Yes


ii. Do the two groups you chose to analyze have a different number of reviews?
	Answer:Yes
         
         
iii. Are you able to infer anything FROM the location data provided between these two groups? Explain.
	Answer:-	Based on the result of below query, we can see that there seems to be a correlation between the location of the business and their rating. 
				The business that are probably located in the same neighbor have close rating,also they have similar working hours.
				Moreover,the business that have longer working hours usually have higher rating. 

SQL code used for analysis:
							SELECT
							business.name
							, business.city
							, category.category
							, business.stars
							, hours.hours
							, business.review_count
							, business.postal_code
							from (business inner join category on business.id = category.business_id) inner join hours on hours.business_id = category.business_id
							where business.city = 'Mesa' 
							 group by business.stars;

		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.

		
i. Difference 1:	The business that are still open have higher rating.
						The review count of open business is much more than the closed ones.
						Average review count of open business: 31.75.
						Average review count of closed business: 23.19.
         
         
ii. Difference 2:	The business that are still open have more star Ratings.
					Also the average stars rating of open business is little more than the closed ones.
					Average star rating of open business: 3.6.
					Average star rating of closed business: 3.5.
         
         
         
SQL code used for analysis:
							SELECT count(id),avg(review_count),sum(review_count),avg(stars),is_open
							FROM business 
							group by is_open;

	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:	Analysing the kind of popular food in different city based on number of restaurants and its star rating and reviews as per yelp data.

         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
		
		Answer:	For the analyses I will be using 2 tables (BUSINESS and CATEGORY) data of restaurants with specific cuisines like “Chinese”,”Mexican”,”Korean”,”French”,”Italian”,”Japanese” and “Indian”.
				After Joining both the TABLE we can find the relation between of their star rating and number of reviews on respective City and different outlets in the Cities, and the type of food is popular in a city in the Given Yelp Dataset.
				
                  
iii. Output of your finished dataset:
										+-----------------+----------+----------------------+-------------------+------------+
										| city            | category | Number_Of_Resturants | AVG(review_count) | AVG(stars) |
										+-----------------+----------+----------------------+-------------------+------------+
										| Aurora          | Indian   |                    1 |              32.0 |        3.5 |
										| Brampton        | Indian   |                    1 |              10.0 |        4.0 |
										| Champaign       | Mexican  |                    1 |               4.0 |        2.0 |
										| Cuyahoga Falls  | Korean   |                    1 |              55.0 |        4.0 |
										| Edinburgh       | Chinese  |                    1 |               3.0 |        3.5 |
										| Edinburgh       | Indian   |                    1 |               3.0 |        3.5 |
										| Edinburgh       | Mexican  |                    1 |              37.0 |        4.0 |
										| Fountain Hills  | Chinese  |                    1 |              21.0 |        3.5 |
										| Inverness       | Indian   |                    1 |               3.0 |        3.5 |
										| Las Vegas       | Chinese  |                    1 |             768.0 |        4.0 |
										| Las Vegas       | French   |                    1 |             168.0 |        4.0 |
										| Las Vegas       | Japanese |                    1 |               3.0 |        4.5 |
										| Litchfield Park | Mexican  |                    1 |              83.0 |        3.5 |
										| Mesa            | Italian  |                    1 |             129.0 |        4.0 |
										| Mississauga     | Japanese |                    1 |              61.0 |        4.0 |
										| Mississauga     | Mexican  |                    1 |              69.0 |        4.0 |
										| Montréal        | Indian   |                    1 |              15.0 |        3.5 |
										| Montréal        | Italian  |                    1 |              19.0 |        3.0 |
										| Pittsburgh      | Mexican  |                    1 |             103.0 |        3.0 |
										| Tolleson        | Mexican  |                    1 |              23.0 |        4.0 |
										| Toronto         | Chinese  |                    1 |               4.0 |        1.5 |
										| Toronto         | French   |                    1 |              89.0 |        4.0 |
										| Toronto         | Japanese |                    3 |     29.3333333333 |        3.5 |
										| Toronto         | Korean   |                    1 |               8.0 |        4.5 |
										| Toronto         | Mexican  |                    1 |               8.0 |        4.0 |
										+-----------------+----------+----------------------+-------------------+------------+
         
         
iv. Provide the SQL code you used to create your final dataset:
																SELECT b.city, c.category,COUNT(b.name) AS
																Number_Of_Resturants,AVG(review_count),AVG(stars)
																FROM business b
																INNER JOIN category c ON c.business_id = b.id
																WHERE c.category IN
																("Chinese","Mexican","French","Italian","Korean","Japanese","Indian")
																GROUP BY b.city, c.category
																ORDER BY b.city;
